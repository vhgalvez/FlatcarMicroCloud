#!/usr/sbin/nft -f

flush ruleset

table inet filter {
  chain input {
    type filter hook input priority 0; policy drop;

    ct state established,related accept
    iif "lo" accept
    ip protocol icmp accept

    # Permitir tráfico a servicios específicos
    ip daddr 192.168.0.30 tcp dport { 80, 443, 8080, 8443 } accept
    ip saddr { 10.17.3.0/24, 10.17.4.0/24, 192.168.0.0/24 } ip daddr 192.168.0.30 accept
    iifname { "br0", "virbr0", "virbr_kube02", "virbr_kube03" } accept

    # Acceso a puertos específicos en nodos
    ip daddr 192.168.0.32 tcp dport 6443 accept
    ip daddr 192.168.0.33 tcp dport { 80, 443, 30807, 32389, 31541 } accept  # Incluido puerto 31541

    # Rango de puertos TCP
    tcp dport { 30000-32767 } accept
    tcp dport {
      22, 80, 443, 6443,
      8080, 8081, 8082, 8443,
      9090, 9091, 9093, 9100,
      3000,
      30807,
      32000-32767
    } accept

    # UDP
    udp dport 123 accept

    # Reglas para permitir tráfico hacia el nodo worker3 en puertos 80, 443 y 31541
    ip saddr { 10.17.3.0/24, 10.17.4.0/24, 192.168.0.0/24 } ip daddr 10.17.4.26 tcp dport { 80, 443, 31541 } accept
    ip saddr 10.17.4.26 ip daddr { 10.17.3.0/24, 10.17.4.0/24, 192.168.0.0/24 } tcp sport { 80, 443, 31541 } accept
  }

  chain forward {
    type filter hook forward priority 0; policy drop;

    ct state established,related accept

    # Aceptar tráfico entre redes internas
    ip saddr 10.17.0.0/16 ip daddr 10.17.0.0/16 accept
    ip saddr 192.168.0.0/24 ip daddr 10.17.0.0/16 accept
    ip saddr 10.17.0.0/16 ip daddr 192.168.0.0/24 accept

    # Reglas para tráfico en puertos específicos
    ip saddr { 10.17.3.0/24, 10.17.4.0/24 } ip daddr 192.168.0.32 tcp dport 6443 accept
    ip saddr 192.168.0.32 ip daddr { 10.17.3.0/24, 10.17.4.0/24 } tcp sport 6443 accept

    # Acceso a servicios en 192.168.0.33 (con el puerto 31541 incluido)
    ip saddr { 10.17.3.0/24, 10.17.4.0/24 } ip daddr 192.168.0.33 tcp dport { 80, 443, 30807, 31541 } accept
    ip saddr 192.168.0.33 ip daddr { 10.17.3.0/24, 10.17.4.0/24 } tcp sport { 80, 443, 30807, 31541 } accept

    # Regla de aceptación de tráfico entre interfaces
    iifname { "br0", "virbr0", "virbr_kube02", "virbr_kube03" } oifname { "br0", "virbr0", "virbr_kube02", "virbr_kube03" } accept
    oifname { "br0", "virbr0", "virbr_kube02", "virbr_kube03" } iifname { "br0", "virbr0", "virbr_kube02", "virbr_kube03" } accept

    # Reglas para tráfico específico de interfaces de red
    iifname { "br0", "virbr_kube02", "virbr_kube03" } oifname "enp3s0f0" accept
  }

  chain output {
    type filter hook output priority 0; policy accept;
  }
}

# Configuración NAT
table inet nat {
  chain postrouting {
    type nat hook postrouting priority srcnat; policy accept;

    ip saddr 10.17.3.0/24 oifname "enp3s0f0" masquerade
    ip saddr 10.17.4.0/24 oifname "enp3s0f0" masquerade
    ip saddr 192.168.0.0/24 oifname "enp3s0f0" masquerade
  }
}

#  Tabla para libvirt (sin cambios)
table ip libvirt_network {
  chain forward {
    counter accept
  }

  chain guest_input {
    counter accept
  }

  chain guest_output {
    counter accept
  }

  chain guest_cross {
    counter accept
  }

  chain guest_nat {
    counter accept
  }
}